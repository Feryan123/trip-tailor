<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        }

        .header {
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            padding: 40px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 700;
        }

        .header p {
            font-size: 1.2em;
            opacity: 0.9;
        }

        .content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0;
            min-height: 600px;
        }

        .form-section {
            padding: 40px;
            background: #f8f9fa;
            border-right: 1px solid #e9ecef;
        }

        .results-section {
            padding: 40px;
            background: white;
        }

        .form-group {
            margin-bottom: 25px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
            font-size: 14px;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: white;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #4facfe;
            box-shadow: 0 0 0 3px rgba(79, 172, 254, 0.1);
        }

        .form-group textarea {
            resize: vertical;
            min-height: 80px;
        }

        .file-input-wrapper {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .file-input-wrapper input[type="file"] {
            position: absolute;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .file-input-text {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 12px 16px;
            border: 2px dashed #e9ecef;
            border-radius: 10px;
            background: white;
            color: #666;
            font-size: 14px;
            transition: all 0.3s ease;
            cursor: pointer;
            min-height: 50px;
        }

        .file-input-wrapper:hover .file-input-text {
            border-color: #4facfe;
            background: #f0f8ff;
        }

        .file-input-wrapper.has-file .file-input-text {
            border-color: #28a745;
            background: #f0fff4;
            color: #28a745;
        }

        .selected-file {
            margin-top: 10px;
            padding: 10px;
            background: #e8f5e8;
            border-radius: 8px;
            font-size: 14px;
            color: #28a745;
        }

        .image-preview {
            margin-top: 10px;
            border-radius: 8px;
            overflow: hidden;
            max-width: 100%;
        }

        .image-preview img {
            width: 100%;
            height: auto;
            max-height: 200px;
            object-fit: cover;
        }

        .generate-btn {
            width: 100%;
            padding: 16px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .generate-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(79, 172, 254, 0.3);
        }

        .generate-btn:active {
            transform: translateY(0);
        }

        .generate-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .results {
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }

        .empty-state h3 {
            font-size: 1.8em;
            margin-bottom: 15px;
            color: #333;
        }

        .empty-state p {
            font-size: 1.1em;
            line-height: 1.6;
        }

        .loading {
            text-align: center;
            padding: 60px 20px;
            display: none;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #4facfe;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .itinerary-content {
            display: none;
            flex: 1;
            overflow-y: auto;
        }

        .itinerary-content h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.4em;
        }

        .itinerary-content p {
            line-height: 1.6;
            color: #555;
            margin-bottom: 15px;
        }

        .itinerary-text {
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            margin-top: 20px;
            white-space: pre-wrap;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
        }

        .note {
            background: #e3f2fd;
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
            border-left: 4px solid #4facfe;
        }

        .note p {
            margin: 0;
            color: #1976d2;
            font-size: 14px;
        }

        .error {
            background: #ffebee;
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            border-left: 4px solid #f44336;
        }

        .error h3 {
            color: #d32f2f;
            margin-bottom: 10px;
        }

        .error p {
            color: #d32f2f;
            margin: 0;
        }

        @media (max-width: 768px) {
            .content {
                grid-template-columns: 1fr;
            }

            .form-section {
                border-right: none;
                border-bottom: 1px solid #e9ecef;
            }

            .header h1 {
                font-size: 2em;
            }

            .header p {
                font-size: 1em;
            }

            .form-section,
            .results-section {
                padding: 30px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>✈️ AI Itinerary Generator</h1>
            <p>Create personalized travel plans with the power of AI</p>
        </div>
        
        <div class="content">
            <div class="form-section">
                <form id="itineraryForm" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="destination">Destination *</label>
                        <input type="text" id="destination" name="destination" placeholder="e.g., Paris, France" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="duration">Duration *</label>
                        <select id="duration" name="duration" required>
                            <option value="">Select duration</option>
                            <option value="1 day">1 Day</option>
                            <option value="2-3 days">2-3 Days</option>
                            <option value="1 week">1 Week</option>
                            <option value="2 weeks">2 Weeks</option>
                            <option value="1 month">1 Month</option>
                            <option value="custom">Custom</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="budget">Budget Range</label>
                        <select id="budget" name="budget">
                            <option value="">Select budget</option>
                            <option value="Budget (under $50/day)">Budget (under $50/day)</option>
                            <option value="Mid-range ($50-150/day)">Mid-range ($50-150/day)</option>
                            <option value="Luxury ($150+/day)">Luxury ($150+/day)</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="interests">Interests</label>
                        <input type="text" id="interests" name="interests" placeholder="e.g., Museums, Food, Nightlife, Adventure">
                    </div>
                    
                    <div class="form-group">
                        <label for="textInput">Additional Details</label>
                        <textarea id="textInput" name="textInput" placeholder="Any special requirements, preferences, or additional information..." rows="3"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label>Upload Image (Optional)</label>
                        <div class="file-input-wrapper" id="fileInputWrapper">
                            <input type="file" id="imageInput" name="image" accept="image/*">
                            <div class="file-input-text" id="fileInputText">📸 Choose Image or Drop Here</div>
                        </div>
                        <div id="selectedFile" class="selected-file" style="display: none;"></div>
                        <div id="imagePreview" class="image-preview" style="display: none;"></div>
                    </div>
                    
                    <button type="submit" class="generate-btn" id="generateBtn">
                        Generate Itinerary
                    </button>
                </form>
            </div>
            
            <div class="results-section">
                <div class="results">
                    <div class="empty-state" id="emptyState">
                        <h3>🗺️ Ready to Plan Your Trip?</h3>
                        <p>Fill out the form and upload an image (optional) to get your personalized travel plan with AI-powered image analysis!</p>
                    </div>
                    
                    <div class="loading" id="loading">
                        <div class="spinner"></div>
                        <p>Creating your perfect itinerary...</p>
                    </div>
                    
                    <div class="itinerary-content" id="itineraryContent"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const imageInput = document.getElementById('imageInput');
        const fileInputWrapper = document.getElementById('fileInputWrapper');
        const fileInputText = document.getElementById('fileInputText');
        const selectedFile = document.getElementById('selectedFile');
        const imagePreview = document.getElementById('imagePreview');

        // Handle file input change
        imageInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                handleFileSelection(file);
            }
        });

        // Handle drag and drop
        fileInputWrapper.addEventListener('dragover', function(e) {
            e.preventDefault();
            fileInputWrapper.classList.add('dragover');
        });

        fileInputWrapper.addEventListener('dragleave', function(e) {
            e.preventDefault();
            fileInputWrapper.classList.remove('dragover');
        });

        fileInputWrapper.addEventListener('drop', function(e) {
            e.preventDefault();
            fileInputWrapper.classList.remove('dragover');
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                const file = files[0];
                if (file.type.startsWith('image/')) {
                    imageInput.files = files;
                    handleFileSelection(file);
                }
            }
        });

        function handleFileSelection(file) {
            // Show file info
            selectedFile.textContent = `Selected: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`;
            selectedFile.style.display = 'block';
            
            // Update wrapper style
            fileInputWrapper.classList.add('has-file');
            fileInputText.textContent = '✅ Image Selected - Click to Change';
            
            // Show image preview
            const reader = new FileReader();
            reader.onload = function(e) {
                imagePreview.innerHTML = `<img src="${e.target.result}" alt="Preview">`;
                imagePreview.style.display = 'block';
            };
            reader.readAsDataURL(file);
        }

        // Handle form submission
        document.getElementById('itineraryForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Show loading state
            document.getElementById('emptyState').style.display = 'none';
            document.getElementById('loading').style.display = 'block';
            document.getElementById('itineraryContent').style.display = 'none';
            document.getElementById('generateBtn').disabled = true;
            
            // Create FormData object to handle file upload
            const formData = new FormData(this);
            
            try {
                // Send to backend endpoint using Server-Sent Events
                const response = await fetch('/api/generate-itinerary', {
                    method: 'POST',
                    body: formData
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                // Handle streaming response
                const reader = response.body.getReader();
                const decoder = new TextDecoder();
                let buffer = '';
                let fullContent = '';
                
                // Hide loading and show content area
                document.getElementById('loading').style.display = 'none';
                document.getElementById('itineraryContent').style.display = 'block';
                
                const contentDiv = document.getElementById('itineraryContent');
                contentDiv.innerHTML = '<h3>🗺️ Your AI-Generated Itinerary</h3><div class="itinerary-text" id="streamingText"></div>';
                const streamingDiv = document.getElementById('streamingText');
                
                while (true) {
                    const { done, value } = await reader.read();
                    if (done) break;
                    
                    buffer += decoder.decode(value, { stream: true });
                    const lines = buffer.split('\n');
                    buffer = lines.pop() || '';
                    
                    for (const line of lines) {
                        if (line.startsWith('data: ')) {
                            const data = line.slice(6);
                            if (data === '[DONE]') {
                                break;
                            }
                            
                            try {
                                const parsed = JSON.parse(data);
                                if (parsed.content) {
                                    fullContent += parsed.content;
                                    streamingDiv.textContent = fullContent;
                                }
                            } catch (e) {
                                console.error('Error parsing JSON:', e);
                            }
                        }
                    }
                }
                
                // Add note at the end
                contentDiv.innerHTML += `
                    <div class="note">
                        <p>💡 This itinerary was generated using AI with Groq's Llama vision model${formData.get('image') ? ' including image analysis' : ''}. Safe travels!</p>
                    </div>
                `;
                
            } catch (error) {
                console.error('Error:', error);
                displayError('Sorry, there was an error generating your itinerary. Please check your connection and try again.');
            } finally {
                document.getElementById('loading').style.display = 'none';
                document.getElementById('generateBtn').disabled = false;
            }
        });
        
        function displayError(message) {
            const content = document.getElementById('itineraryContent');
            content.innerHTML = `
                <div class="error">
                    <h3>⚠️ Error</h3>
                    <p>${message}</p>
                </div>
            `;
            content.style.display = 'block';
        }
    </script>
</body>
</html>